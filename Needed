// // src/users/dto/signup.dto.ts
// import { IsString, IsEmail, MinLength } from 'class-validator';

// export class SignupDto {
//   @IsString()
//   @MinLength(3)
//   username: string;

//   @IsEmail()
//   email: string;

//   @IsString()
//   @MinLength(6)
//   password: string;
// }



// // src/users/users.service.ts

// import { Injectable } from '@nestjs/common';
// import { SignupDto } from './dto/signup.dto';

// @Injectable()
// export class UsersService {
//   // You would normally save this to a database, but let's mock it for now
//   private users = [];

//   signup(signupDto: SignupDto) {
//     // In real apps, you should hash the password and save to a database
//     const { username, email, password } = signupDto;

//     const newUser = { id: Date.now(), username, email, password };
//     this.users.push(newUser);  // Mock save to database

//     return newUser;
//   }
// }





// // src/users/users.controller.ts

// import { Controller, Post, Body } from '@nestjs/common';
// import { UsersService } from './users.service';
// import { SignupDto } from './dto/signup.dto';

// @Controller('users')  // The base path is '/users'
// export class UsersController {
//   constructor(private readonly usersService: UsersService) {}

//   @Post('signup')  // The signup path will be '/users/signup'
//   signup(@Body() signupDto: SignupDto) {
//     return this.usersService.signup(signupDto);  // Call the service to handle signup
//   }
// }



// // src/users/users.module.ts

// import { Module } from '@nestjs/common';
// import { UsersController } from './users.controller';
// import { UsersService } from './users.service';

// @Module({
//   controllers: [UsersController],
//   providers: [UsersService],
// })
// export class UsersModule {}




// // src/main.ts

// import { NestFactory } from '@nestjs/core';
// import { AppModule } from './app.module';

// async function bootstrap() {
//   const app = await NestFactory.create(AppModule);

//   // Enable CORS to allow the frontend (Next.js) to make requests
//   app.enableCors();

//   await app.listen(3000);  // NestJS runs on port 3000
// }

// bootstrap();







// npm install axios


// // pages/signup.js

// import { useState } from 'react';
// import axios from 'axios';
// import { useRouter } from 'next/router';

// const Signup = () => {
//   const [username, setUsername] = useState('');
//   const [email, setEmail] = useState('');
//   const [password, setPassword] = useState('');
//   const [error, setError] = useState('');
//   const [loading, setLoading] = useState(false);
//   const router = useRouter();

//   const handleSubmit = async (event) => {
//     event.preventDefault();

//     // Reset error state
//     setError('');

//     // Prepare the data
//     const signupData = { username, email, password };

//     try {
//       setLoading(true);
//       // Make POST request to the NestJS backend API
//       const response = await axios.post('http://localhost:3000/users/signup', signupData);

//       // On successful signup, redirect the user
//       router.push('/welcome');  // Redirect to a "welcome" page (or dashboard, etc.)
//     } catch (err) {
//       // Handle error
//       setError('Failed to sign up. Please try again.');
//     } finally {
//       setLoading(false);
//     }
//   };

//   return (
//     <div>
//       <h1>Signup</h1>
//       <form onSubmit={handleSubmit}>
//         <div>
//           <label>Username:</label>
//           <input
//             type="text"
//             value={username}
//             onChange={(e) => setUsername(e.target.value)}
//             required
//           />
//         </div>
//         <div>
//           <label>Email:</label>
//           <input
//             type="email"
//             value={email}
//             onChange={(e) => setEmail(e.target.value)}
//             required
//           />
//         </div>
//         <div>
//           <label>Password:</label>
//           <input
//             type="password"
//             value={password}
//             onChange={(e) => setPassword(e.target.value)}
//             required
//           />
//         </div>
//         <button type="submit" disabled={loading}>
//           {loading ? 'Signing up...' : 'Sign Up'}
//         </button>
//       </form>

//       {error && <p style={{ color: 'red' }}>{error}</p>}
//     </div>
//   );
// };

// export default Signup;




//Set the URL to http://localhost:3000/users/signup.







  // const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {
  //   e.preventDefault();

  //   if (validateForm()) {
  //     try {
  //       const response = await axios.post('signup', formData); // Use the axios instance
  //       console.log('User signed up successfully:', response.data);
  //       // Redirect user to login page or dashboard on success
  //     } catch (error) {
  //       const errorMessage = (error as any).response?.data?.message || (error as any).message;
  //       console.error('Error during signup:', errorMessage);
  //       // Handle errors, e.g., display an error message to the user
  //     }
  //   }
  // };